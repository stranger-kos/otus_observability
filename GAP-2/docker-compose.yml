version: '3.1'

services:
  wordpress:
    image: wordpress
    container_name: wordpress
    restart: always
    ports:
      - 9080:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: postgres
      WORDPRESS_DB_PASSWORD: pass
      WORDPRESS_DB_NAME: wordpress
    networks:
      - default

  db:
    image: postgres:14.1
    container_name: postgres
    ports:
      - 6134:5134
      - 9187:9187
    volumes:
      - './postgres_exporter/postgres_exporter.service:/etc/systemd/system/postgres_exporter.service'
      - './postgres_exporter/postgres_exporter.env:/opt/postgres_exporter/postgres_exporter.env'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: wordpress
    networks:
      - default

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
      - ./prometheus/:/etc/prometheus/
      - ./prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.max-block-duration=2h'
      - '--storage.tsdb.min-block-duration=2h'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - default

  node_exporter:
    image: bitnami/node-exporter:latest
    container_name: node_exporter
    restart: always
    ports:
      - 9100:9100
    networks:
      - default

  blackbox_exporter:
    image: prom/blackbox-exporter
    container_name: blackbox
    restart: always
    ports:
      - 9115:9115
    volumes:
      - './blackbox.yml:/blackbox.yml'
    command:
      - '--config.file=/blackbox.yml'
    networks:
      - default
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - default

  thanos-sidecar:
    image: quay.io/thanos/thanos:v0.31.0
    container_name: thanos-sidecar
    volumes:
      - ./thanos/:/etc/thanos/
      - ./prometheus_data:/prometheus
      - ./thanos/bucket_config.yml:/etc/thanos/bucket_config.yml
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus:9090'
      - '--grpc-address=0.0.0.0:10901'
      - '--http-address=0.0.0.0:10902'
      - '--objstore.config-file=/etc/thanos/bucket_config.yml'
    depends_on:
      - prometheus
      - minio
    restart: always
    networks:
      - default

  thanos-query:
    image: quay.io/thanos/thanos:v0.31.0
    container_name: thanos-query
    volumes:
      - './thanos/bucket_config.yml:/etc/thanos/bucket_config.yml'
    command:
      - 'query'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--query.replica-label=prod'
      - '--store=thanos-sidecar:10901'
      - '--store=thanos-store-gateway:10091'
      - '--store=thanos-ruler:10091'
    ports:
      - 10902:10902
    depends_on:
      - thanos-sidecar
    restart: always
    networks:
      - default

  thanos-query-frontend:
    image: quay.io/thanos/thanos:v0.31.0
    container_name: thanos-query-frontend
    command:
        - 'query-frontend'
        - '--http-address=0.0.0.0:10901'
        - '--query-frontend.downstream-url=http://thanos-query:10902'
    ports:
        - 10901:10901
    depends_on:
        - thanos-query
    restart: always
    networks:
      - default

  thanos-store-gateway:
    image: quay.io/thanos/thanos:v0.31.0
    container_name: thanos-store-gateway
    volumes:
      - ./thanos/:/etc/thanos/
      - ./thanos_store:/tmp/thanos/store
      - './thanos/bucket_config.yml:/etc/thanos/bucket_config.yml'
    command:
      - 'store'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10092'
      - '--data-dir=/tmp/thanos/store'
      - '--objstore.config-file=/etc/thanos/bucket_config.yml'
    depends_on:
      - minio
    restart: always
    networks:
      - default

  thanos-compactor:
    image: quay.io/thanos/thanos:v0.31.0
    container_name: thanos-compactor
    volumes:
      - ./thanos/:/etc/thanos/
      - './thanos/bucket_config.yml:/etc/thanos/bucket_config.yml'
    command:
      - 'compact'
      - '--log.level=debug'
      - '--data-dir=/data'
      - '--objstore.config-file=/etc/thanos/bucket_config.yml'
      - '--wait'
      - '--retention.resolution-raw=14d'
      - '--retention.resolution-5m=14d'
      - '--retention.resolution-1h=14d'
    depends_on:
      - minio
    restart: always
    networks:
      - default

  minio:
    image: minio/minio
    container_name: minio
    volumes:
      - ./minio_data:/data
    entrypoint: sh
    command: -c 'mkdir -p /data/demo-bucket && /usr/bin/minio server /data'
    environment:
      - MINIO_ACCESS_KEY=smth
      - MINIO_SECRET_KEY=Need8Chars
      - MINIO_PROMETHEUS_AUTH_TYPE=public
    ports:
      - 9000:9000
      - 9091:9090
    networks:
      - default

networks:
  default:
    driver: bridge
